# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-19 07:38
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Abo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.PositiveIntegerField(default=1)),
                ('future_size', models.PositiveIntegerField(default=1, verbose_name=b'Zukuenftige Groesse')),
                ('extra_abos_changed', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Abo',
                'verbose_name_plural': 'Abos',
            },
        ),
        migrations.CreateModel(
            name='Anteilschein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False)),
                ('canceled', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Anteilschein',
                'verbose_name_plural': 'Anteilscheine',
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=20)),
                ('field', models.CharField(max_length=100)),
                ('source_id', models.PositiveIntegerField()),
                ('target_id', models.PositiveIntegerField(blank=True, null=True)),
                ('source_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_set', to='contenttypes.ContentType')),
                ('target_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_set', to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Boehnli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'B\xf6hnli',
                'verbose_name_plural': 'B\xf6hnlis',
            },
        ),
        migrations.CreateModel(
            name='Depot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name=b'Code')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name=b'Depot Name')),
                ('weekday', models.PositiveIntegerField(choices=[(1, b'Montag'), (2, b'Dienstag'), (3, b'Mittwoch'), (4, b'Donnerstag'), (5, b'Freitag'), (6, b'Samstag'), (7, b'Sonntag')], verbose_name=b'Wochentag')),
                ('latitude', models.CharField(default=b'', max_length=100, verbose_name=b'Latitude')),
                ('longitude', models.CharField(default=b'', max_length=100, verbose_name=b'Longitude')),
                ('addr_street', models.CharField(max_length=100, verbose_name=b'Strasse')),
                ('addr_zipcode', models.CharField(max_length=10, verbose_name=b'PLZ')),
                ('addr_location', models.CharField(max_length=50, verbose_name=b'Ort')),
                ('description', models.TextField(default=b'', max_length=1000, verbose_name=b'Beschreibung')),
            ],
            options={
                'verbose_name': 'Depot',
                'verbose_name_plural': 'Depots',
                'permissions': (('is_depot_admin', 'Benutzer ist Depot Admin'),),
            },
        ),
        migrations.CreateModel(
            name='ExtraAboType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name=b'Name')),
                ('description', models.TextField(max_length=1000, verbose_name=b'Beschreibung')),
            ],
            options={
                'verbose_name': 'Zusatz-Abo',
                'verbose_name_plural': 'Zusatz-Abos',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slots', models.PositiveIntegerField(verbose_name=b'Plaetze')),
                ('time', models.DateTimeField()),
                ('pinned', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False, verbose_name=b'Reminder verschickt')),
                ('canceled', models.BooleanField(default=False, verbose_name=b'abgesagt')),
            ],
            options={
                'verbose_name': 'AbstractJob',
                'verbose_name_plural': 'AbstractJobs',
            },
        ),
        migrations.CreateModel(
            name='AbstractJobType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name=b'Name')),
                ('displayed_name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Angezeigter Name')),
                ('description', models.TextField(default=b'', max_length=1000, verbose_name=b'Beschreibung')),
                ('duration', models.PositiveIntegerField(verbose_name=b'Dauer in Stunden')),
                ('location', models.CharField(default=b'', max_length=100, verbose_name=b'Ort')),
            ],
            options={
                'verbose_name': 'AbstractJobart',
                'verbose_name_plural': 'AbstractJobarten',
            },
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('abstractjobtype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='my_ortoloco.AbstractJobType')),
            ],
            options={
                'verbose_name': 'Jobart',
                'verbose_name_plural': 'Jobarten',
            },
        ),
        migrations.CreateModel(
            name='Loco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name=b'Vorname')),
                ('last_name', models.CharField(max_length=30, verbose_name=b'Nachname')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('addr_street', models.CharField(max_length=100, verbose_name=b'Strasse')),
                ('addr_zipcode', models.CharField(max_length=10, verbose_name=b'PLZ')),
                ('addr_location', models.CharField(max_length=50, verbose_name=b'Ort')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name=b'Geburtsdatum')),
                ('boehnlis', models.PositiveSmallIntegerField(default=0, verbose_name=b'Boehnlis')),
                ('phone', models.CharField(max_length=50, verbose_name=b'Telefonnr')),
                ('mobile_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name=b'Mobile')),
                ('confirmed', models.BooleanField(default=True, verbose_name=b'best\xc3\xa4tigt')),
                ('reachable_by_email', models.BooleanField(default=False, verbose_name=b'reachable_by_email')),
                ('abo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locos', to='my_ortoloco.Abo')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loco', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Loco',
                'verbose_name_plural': 'Locos',
            },
        ),
        migrations.CreateModel(
            name='Taetigkeitsbereich',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name=b'Name')),
                ('description', models.TextField(default=b'', max_length=1000, verbose_name=b'Beschreibung')),
                ('core', models.BooleanField(default=False, verbose_name=b'Kernbereich')),
                ('hidden', models.BooleanField(default=False, verbose_name=b'versteckt')),
                ('coordinator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_ortoloco.Loco')),
                ('locos', models.ManyToManyField(blank=True, related_name='areas', to='my_ortoloco.Loco')),
            ],
            options={
                'verbose_name': 'T\xe4tigkeitsbereich',
                'verbose_name_plural': 'T\xe4tigkeitsbereiche',
                'permissions': (('is_area_admin', 'Benutzer ist T\xe4tigkeitsbereichskoordinatorIn'),),
            },
        ),
        migrations.CreateModel(
            name='OneTimeJob',
            fields=[
                ('job_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='my_ortoloco.Job')),
                ('abstractjobtype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=False, serialize=False, to='my_ortoloco.AbstractJobType')),
                
            ],
            options={
                'verbose_name': 'EinzelJob',
                'verbose_name_plural': 'EinzelJobs',
            },
            bases=('my_ortoloco.job', models.Model),
        ),
        migrations.CreateModel(
            name='RecuringJob',
            fields=[
                ('job_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='my_ortoloco.Job')),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
            },
            bases=('my_ortoloco.job',),
        ),
        migrations.AddField(
            model_name='abstractjobtype',
            name='bereich',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_ortoloco.Taetigkeitsbereich'),
        ),
        migrations.AddField(
            model_name='job',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_my_ortoloco.job_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='abstractjobtype',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_my_ortoloco.abstractjobtype_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='depot',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_ortoloco.Loco'),
        ),
        migrations.AddField(
            model_name='boehnli',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_ortoloco.Job'),
        ),
        migrations.AddField(
            model_name='boehnli',
            name='loco',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_ortoloco.Loco'),
        ),
        migrations.AddField(
            model_name='anteilschein',
            name='loco',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='my_ortoloco.Loco'),
        ),
        migrations.AddField(
            model_name='abo',
            name='depot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_ortoloco.Depot'),
        ),
        migrations.AddField(
            model_name='abo',
            name='extra_abos',
            field=models.ManyToManyField(blank=True, related_name='extra_abos', to='my_ortoloco.ExtraAboType'),
        ),
        migrations.AddField(
            model_name='abo',
            name='future_extra_abos',
            field=models.ManyToManyField(blank=True, related_name='future_extra_abos', to='my_ortoloco.ExtraAboType'),
        ),
        migrations.AddField(
            model_name='abo',
            name='primary_loco',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='abo_primary', to='my_ortoloco.Loco'),
        ),
        migrations.AddField(
            model_name='recuringjob',
            name='typ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_ortoloco.JobType'),
        ),
    ]
