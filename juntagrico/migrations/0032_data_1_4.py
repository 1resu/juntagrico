# Generated by Django 3.1.5 on 2021-01-17 19:01

import random
import string
from django.db import migrations
from juntagrico.entity.member import Member


def fix_user_field(apps, schema_editor):
    # In case there are legacy members with user field None, trigger
    # standard pre-save option to create corresponding users
    for m in Member.objects.all():
        if getattr(m, 'user', None) is None:
            m.save()


def assign_sort_order(apps, entity, order_key):
    entity_class = apps.get_model('juntagrico', entity)
    for idx, item in enumerate(entity_class.objects.all().order_by(order_key)):
        item.sort_order = idx + 1
        item.save()


def depot_code_to_sort_order(apps, schema_editor):
    assign_sort_order(apps, 'Depot', 'code')


def sort_order_to_depot_code(apps, schema_editor):
    Depots = apps.get_model('juntagrico', 'Depot')
    for depot in Depots.objects.all():
        # sort_order is not guaranteed to be unique, so append random string to ensure uniqueness
        depot.code = '{:05d}'.format(depot.sort_order) + '_' + ''.join(random.choices(string.ascii_lowercase + string.digits, k=7))
        depot.save()


def subscriptionproduct_sort_order(apps, schema_editor):
    assign_sort_order(apps, 'SubscriptionProduct', 'pk')


def activityarea_sort_order(apps, schema_editor):
    assign_sort_order(apps, 'ActivityArea', 'pk')


def extrasubscriptioncategory_sort_order(apps, schema_editor):
    assign_sort_order(apps, 'ExtraSubscriptionCategory', 'pk')


def extrasubscriptiontype_sort_order(apps, schema_editor):
    assign_sort_order(apps, 'ExtraSubscriptionType', 'pk')


def subscriptiontype_sort_order(apps, schema_editor):
    assign_sort_order(apps, 'SubscriptionType', 'pk')


def listmessage_sort_order(apps, schema_editor):
    assign_sort_order(apps, 'ListMessage', 'sort_order')


def sort_order_pass(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('juntagrico', '0031_pre_1_4'),
    ]

    operations = [
        migrations.RunPython(fix_user_field),
        migrations.RunPython(depot_code_to_sort_order, sort_order_to_depot_code),
        migrations.RunPython(activityarea_sort_order, sort_order_pass),
        migrations.RunPython(subscriptionproduct_sort_order, sort_order_pass),
        migrations.RunPython(extrasubscriptioncategory_sort_order, sort_order_pass),
        migrations.RunPython(extrasubscriptiontype_sort_order, sort_order_pass),
        migrations.RunPython(subscriptiontype_sort_order, sort_order_pass),
        migrations.RunPython(listmessage_sort_order, sort_order_pass),
    ]
